{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82104\\\\Desktop\\\\\\uB2E4\\uC2DC flower\\\\flower\\\\client\\\\src\\\\components\\\\utils\\\\FileUpload.js\";\nimport React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { PlusOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nfunction FileUpload(props) {\n  const [Images, setImages] = useState([]);\n\n  const dropHandler = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    formData.append(\"file\", files[0]);\n    axios.post('/api/product/image', formData, config).then(response => {\n      if (response.data.success) {\n        setImages([...Images, response.data.filePath]);\n        props.refreshFunction([...Images, response.data.filePath]);\n      } else {\n        alert('파일을 저장하는데 실패했습니다.');\n      }\n    });\n  };\n\n  const deleteHandler = image => {\n    const currentIndex = Images.indexOf(image);\n    let newImages = [...Images];\n    newImages.splice(currentIndex, 1);\n    setImages(newImages);\n    props.refreshFunction(newImages);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: dropHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      width: 300,\n      height: 240,\n      border: '1px solid lightgray',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(PlusOutlined, {\n    type: \"plus\",\n    style: {\n      fontSize: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      width: '350px',\n      height: '240px',\n      overflowX: 'scroll',\n      overflowY: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, Images.map((image, index) => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => deleteHandler(image),\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      minWidth: '300px',\n      width: '300px',\n      height: '240px'\n    },\n    src: `http://localhost:5000/${image}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/82104/Desktop/다시 flower/flower/client/src/components/utils/FileUpload.js"],"names":["React","useState","Dropzone","PlusOutlined","axios","FileUpload","props","Images","setImages","dropHandler","files","formData","FormData","config","header","append","post","then","response","data","success","filePath","refreshFunction","alert","deleteHandler","image","currentIndex","indexOf","newImages","splice","display","justifyContent","getRootProps","getInputProps","width","height","border","alignItems","fontSize","overflowX","overflowY","map","index","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { PlusOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nfunction FileUpload(props) {\n    \n    const [Images, setImages] = useState([])\n\n    const dropHandler = (files) => {\n\n        let formData = new FormData();\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n        formData.append(\"file\", files[0])\n\n        axios.post('/api/product/image',formData ,config)\n            .then(response => {\n                if (response.data.success) {\n                    setImages([...Images, response.data.filePath])\n                    props.refreshFunction([...Images, response.data.filePath])\n                } else {\n                    alert('파일을 저장하는데 실패했습니다.')\n                }\n            })\n\n    }\n\n    const deleteHandler = (image) => {\n        const currentIndex = Images.indexOf(image)\n        let newImages = [...Images]\n        newImages.splice(currentIndex, 1)\n        setImages(newImages)\n        props.refreshFunction(newImages)\n    }\n\n\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n            <Dropzone onDrop={dropHandler}>\n                {({getRootProps, getInputProps}) => (\n                    <div\n                        style={{\n                            width: 300, height:240, border: '1px solid lightgray',\n                            display: 'flex', alignItems: 'center', justifyContent: 'center'\n                        }}\n                        {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <PlusOutlined  type='plus' style={{ fontSize: '3rem' }} />\n                    </div>\n                )}\n            </Dropzone>\n                \n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll', overflowY:'hidden' }}>\n                \n                {Images.map((image, index) => (\n                    <div onClick={()=> deleteHandler(image)} key={index}>\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\n                        src={`http://localhost:5000/${image}`}\n                        />\n                    </div>\n                ))}\n                \n            </div>\n\n\n\n        </div>\n    )\n}\n\nexport default FileUpload\n"]},"metadata":{},"sourceType":"module"}