{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82104\\\\Desktop\\\\\\uB2E4\\uC2DC flower\\\\flower\\\\client\\\\src\\\\components\\\\views\\\\CartPage\\\\CartPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getCartItems, removeCartItem, onSuccessBuy } from '../../../_actions/user_actions';\nimport UserCardBlock from './Sections/UserCardBlock';\nimport { Empty, Result } from 'antd';\n\nfunction CartPage(props) {\n  const dispatch = useDispatch();\n  const [Total, setTotal] = useState(0);\n  const [ShowTotal, setShowTotal] = useState(false);\n  const [ShowSuccess, setShowSuccess] = useState(false);\n  useEffect(() => {\n    let cartItems = []; //리덕스 User state안에 cart 안에 상품이 들어있는지 확인 \n\n    if (props.user.userData && props.user.userData.cart) {\n      if (props.user.userData.cart.length > 0) {\n        props.user.userData.cart.forEach(item => {\n          cartItems.push(item.id);\n        });\n        dispatch(getCartItems(cartItems, props.user.userData.cart)).then(response => {\n          calculateTotal(response.payload);\n        });\n      }\n    }\n  }, [props.user.userData]);\n\n  let calculateTotal = cartDetail => {\n    let total = 0;\n    cartDetail.map(item => {\n      total += parseInt(item.price, 10) * item.quantity;\n    });\n    setTotal(total);\n    setShowTotal(true);\n  };\n\n  let removeFromCart = productId => {\n    dispatch(removeCartItem(productId)).then(response => {\n      if (response.payload.productInfo.length <= 0) {\n        setShowTotal(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '85%',\n      margin: '3rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"My Cart\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UserCardBlock, {\n    products: props.user.cartDetail,\n    removeItem: removeFromCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default CartPage;","map":{"version":3,"sources":["C:/Users/82104/Desktop/다시 flower/flower/client/src/components/views/CartPage/CartPage.js"],"names":["React","useEffect","useState","useDispatch","getCartItems","removeCartItem","onSuccessBuy","UserCardBlock","Empty","Result","CartPage","props","dispatch","Total","setTotal","ShowTotal","setShowTotal","ShowSuccess","setShowSuccess","cartItems","user","userData","cart","length","forEach","item","push","id","then","response","calculateTotal","payload","cartDetail","total","map","parseInt","price","quantity","removeFromCart","productId","productInfo","width","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCartItems, removeCartItem, onSuccessBuy } from '../../../_actions/user_actions';\r\nimport UserCardBlock from './Sections/UserCardBlock';\r\nimport { Empty, Result } from 'antd';\r\n\r\nfunction CartPage(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [Total, setTotal] = useState(0)\r\n    const [ShowTotal, setShowTotal] = useState(false)\r\n    const [ShowSuccess, setShowSuccess] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        let cartItems = []\r\n        //리덕스 User state안에 cart 안에 상품이 들어있는지 확인 \r\n        if (props.user.userData && props.user.userData.cart) {\r\n            if (props.user.userData.cart.length > 0) {\r\n                props.user.userData.cart.forEach(item => {\r\n                    cartItems.push(item.id)\r\n                })\r\n                dispatch(getCartItems(cartItems, props.user.userData.cart))\r\n                    .then(response => { calculateTotal(response.payload) })\r\n            }\r\n        }\r\n    }, [props.user.userData])\r\n\r\n\r\n    let calculateTotal = (cartDetail) => {\r\n        let total = 0;\r\n\r\n        cartDetail.map(item => {\r\n            total += parseInt(item.price, 10) * item.quantity\r\n        })\r\n\r\n        setTotal(total)\r\n        setShowTotal(true)\r\n\r\n    }\r\n\r\n\r\n    let removeFromCart = (productId) => {\r\n\r\n        dispatch(removeCartItem(productId))\r\n            .then(response => {\r\n\r\n                if (response.payload.productInfo.length <= 0) {\r\n                    setShowTotal(false)\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <h1>My Cart</h1>\r\n\r\n            <div>\r\n                <UserCardBlock products={props.user.cartDetail} removeItem={removeFromCart} />\r\n            </div>\r\n\r\n\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage"]},"metadata":{},"sourceType":"module"}