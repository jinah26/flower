{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER, ADD_TO_CART, GET_CART_ITEMS } from './types';\nimport { USER_SERVER } from '../components/Config.js';\nimport { IdcardFilled } from '@ant-design/icons';\nexport function registerUser(dataToSubmit) {\n  const request = axios.post(`${USER_SERVER}/register`, dataToSubmit).then(response => response.data);\n  return {\n    type: REGISTER_USER,\n    payload: request\n  };\n}\nexport function loginUser(dataToSubmit) {\n  const request = axios.post(`${USER_SERVER}/login`, dataToSubmit).then(response => response.data);\n  return {\n    type: LOGIN_USER,\n    payload: request\n  };\n}\nexport function auth() {\n  const request = axios.get(`${USER_SERVER}/auth`).then(response => response.data);\n  return {\n    type: AUTH_USER,\n    payload: request\n  };\n}\nexport function logoutUser() {\n  const request = axios.get(`${USER_SERVER}/logout`).then(response => response.data);\n  return {\n    type: LOGOUT_USER,\n    payload: request\n  };\n}\nexport function addToCart(id) {\n  let body = {\n    productId: id\n  };\n  const request = axios.post(`${USER_SERVER}/addToCart`, body).then(response => response.data);\n  return {\n    type: ADD_TO_CART,\n    payload: request\n  };\n}\nexport function getCartItems(cartItems, userCart) {\n  const request = axios.get(`/api/product/products_by_id?id=${cartItems}$type=array`).then(response => {\n    // CartItem들에 해당하는 정보들을 prodcut Collection에서 가져온후 quantity 정보를 넣어줌\n    userCart.forEach(cartItems => {\n      response.data.forEach((productDetail, index) => {\n        if (cartItems.id === productDetail._id) {\n          response.data[index].quantity = cartItems.quantity;\n        }\n      });\n    });\n    return response.data;\n  });\n  return {\n    type: GET_CART_ITEMS,\n    payload: request\n  };\n}","map":{"version":3,"sources":["C:/Users/82104/Desktop/다시 flower/flower/client/src/_actions/user_actions.js"],"names":["axios","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART","GET_CART_ITEMS","USER_SERVER","IdcardFilled","registerUser","dataToSubmit","request","post","then","response","data","type","payload","loginUser","auth","get","logoutUser","addToCart","id","body","productId","getCartItems","cartItems","userCart","forEach","productDetail","index","_id","quantity"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,UADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,WAJJ,EAKIC,WALJ,EAMIC,cANJ,QAOO,SAPP;AAQA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,OAAO,SAASC,YAAT,CAAsBC,YAAtB,EAAmC;AACtC,QAAMC,OAAO,GAAGX,KAAK,CAACY,IAAN,CAAY,GAAEL,WAAY,WAA1B,EAAqCG,YAArC,EACXG,IADW,CACNC,QAAQ,IAAIA,QAAQ,CAACC,IADf,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAEd,aADH;AAEHe,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH;AAED,OAAO,SAASO,SAAT,CAAmBR,YAAnB,EAAgC;AACnC,QAAMC,OAAO,GAAGX,KAAK,CAACY,IAAN,CAAY,GAAEL,WAAY,QAA1B,EAAkCG,YAAlC,EACHG,IADG,CACEC,QAAQ,IAAIA,QAAQ,CAACC,IADvB,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAEf,UADH;AAEHgB,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH;AAED,OAAO,SAASQ,IAAT,GAAe;AAClB,QAAMR,OAAO,GAAGX,KAAK,CAACoB,GAAN,CAAW,GAAEb,WAAY,OAAzB,EACfM,IADe,CACVC,QAAQ,IAAIA,QAAQ,CAACC,IADX,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAEb,SADH;AAEHc,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH;AAED,OAAO,SAASU,UAAT,GAAqB;AACxB,QAAMV,OAAO,GAAGX,KAAK,CAACoB,GAAN,CAAW,GAAEb,WAAY,SAAzB,EACfM,IADe,CACVC,QAAQ,IAAIA,QAAQ,CAACC,IADX,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAEZ,WADH;AAEHa,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH;AAED,OAAO,SAASW,SAAT,CAAmBC,EAAnB,EAAsB;AAEzB,MAAIC,IAAI,GAAI;AACRC,IAAAA,SAAS,EAAGF;AADJ,GAAZ;AAIA,QAAMZ,OAAO,GAAGX,KAAK,CAACY,IAAN,CAAY,GAAEL,WAAY,YAA1B,EAAuCiB,IAAvC,EACfX,IADe,CACVC,QAAQ,IAAIA,QAAQ,CAACC,IADX,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAEX,WADH;AAEHY,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH;AAED,OAAO,SAASe,YAAT,CAAsBC,SAAtB,EAAiCC,QAAjC,EAA2C;AAE9C,QAAMjB,OAAO,GAAGX,KAAK,CAACoB,GAAN,CAAW,kCAAiCO,SAAU,aAAtD,EACfd,IADe,CACVC,QAAQ,IAAI;AACV;AAEIc,IAAAA,QAAQ,CAACC,OAAT,CAAiBF,SAAS,IAAI;AAE1Bb,MAAAA,QAAQ,CAACC,IAAT,CAAcc,OAAd,CAAsB,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;AAE5C,YAAGJ,SAAS,CAACJ,EAAV,KAAiBO,aAAa,CAACE,GAAlC,EAAuC;AACnClB,UAAAA,QAAQ,CAACC,IAAT,CAAcgB,KAAd,EAAqBE,QAArB,GAAgCN,SAAS,CAACM,QAA1C;AACH;AACJ,OALD;AAMH,KARD;AAUA,WAAOnB,QAAQ,CAACC,IAAhB;AAEH,GAhBO,CAAhB;AAoBA,SAAO;AACHC,IAAAA,IAAI,EAACV,cADF;AAEHW,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART,\n    GET_CART_ITEMS\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\nimport { IdcardFilled } from '@ant-design/icons';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\nexport function addToCart(id){\n\n    let body =  {\n        productId : id\n    }\n\n    const request = axios.post(`${USER_SERVER}/addToCart`, body)\n    .then(response => response.data);\n\n    return {\n        type: ADD_TO_CART,\n        payload: request\n    }\n}\n\nexport function getCartItems(cartItems, userCart) {\n\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}$type=array`)\n    .then(response => {\n            // CartItem들에 해당하는 정보들을 prodcut Collection에서 가져온후 quantity 정보를 넣어줌\n\n                userCart.forEach(cartItems => {\n\n                    response.data.forEach((productDetail, index) => {\n\n                        if(cartItems.id === productDetail._id) {\n                            response.data[index].quantity = cartItems.quantity\n                        }\n                    })\n                })\n\n                return response.data;\n\n            });\n\n            \n\n    return {\n        type:GET_CART_ITEMS,\n        payload: request\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}