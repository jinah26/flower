{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82104\\\\Desktop\\\\\\uB2E4\\uC2DC flower\\\\flower\\\\client\\\\src\\\\components\\\\views\\\\CartPage\\\\CartPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getCartItems, removeCartItem } from '../../../_actions/user_actions';\nimport UserCardBlock from './Sections/UserCardBlock';\nimport { Empty } from 'antd';\n\nfunction CartPage(props) {\n  const dispatch = useDispatch();\n  const [Total, setTotal] = useState(0);\n  const [ShowTotal, setShowTotal] = useState(false);\n  useEffect(() => {\n    let cartItems = []; //리덕스 User state안에 cart 안에 상품이 들어있는지 확인 \n\n    if (props.user.userData && props.user.userData.cart) {\n      if (props.user.userData.cart.length > 0) {\n        props.user.userData.cart.forEach(item => {\n          cartItems.push(item.id);\n        });\n        dispatch(getCartItems(cartItems, props.user.userData.cart)).then(response => {\n          console.log(response.payload);\n        });\n      }\n    }\n  }, [props.user.userData]);\n\n  let calculateTotal = cartDetail => {\n    let total = 0;\n    cartDetail.map(item => {\n      total += parseInt(item.price, 10) * item.quantity;\n    });\n    setTotal(total);\n    setShowTotal(true);\n  };\n\n  let removeFromCart = productId => {\n    dispatch(removeCartItem(productId)).then(response => {\n      if (response.payload.proudctInfo.length <= 0) {\n        setShowTotal(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '85%',\n      margin: '3rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"My Cart\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserCardBlock, {\n    products: props.user.cartDetail,\n    removeItem: removeFromCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })), ShowTotal ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \" Total Amount : $\", Total, \" \")) : /*#__PURE__*/React.createElement(Empty, {\n    description: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default CartPage;","map":{"version":3,"sources":["C:/Users/82104/Desktop/다시 flower/flower/client/src/components/views/CartPage/CartPage.js"],"names":["React","useEffect","useState","useDispatch","getCartItems","removeCartItem","UserCardBlock","Empty","CartPage","props","dispatch","Total","setTotal","ShowTotal","setShowTotal","cartItems","user","userData","cart","length","forEach","item","push","id","then","response","console","log","payload","calculateTotal","cartDetail","total","map","parseInt","price","quantity","removeFromCart","productId","proudctInfo","width","margin","marginTop"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {useDispatch}  from 'react-redux';\r\nimport { getCartItems, removeCartItem } from '../../../_actions/user_actions'\r\nimport UserCardBlock from './Sections/UserCardBlock'\r\nimport { Empty} from 'antd';\r\n\r\nfunction CartPage(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [Total, setTotal] = useState(0)\r\n    const [ShowTotal, setShowTotal] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        let cartItems=[]\r\n\r\n        //리덕스 User state안에 cart 안에 상품이 들어있는지 확인 \r\n        if(props.user.userData && props.user.userData.cart) {\r\n            if(props.user.userData.cart.length > 0){\r\n                props.user.userData.cart.forEach(item => {\r\n                    cartItems.push(item.id)\r\n                })\r\n\r\n                dispatch(getCartItems(cartItems, props.user.userData.cart))\r\n                .then(response => {console.log(response.payload)})\r\n            }\r\n        }\r\n\r\n    }, [props.user.userData])\r\n\r\n    let calculateTotal = (cartDetail) => {\r\n        let total = 0;\r\n\r\n        cartDetail.map(item => {\r\n            total += parseInt(item.price, 10) * item.quantity\r\n        })\r\n\r\n        setTotal(total)\r\n        setShowTotal(true)\r\n      \r\n\r\n    }\r\n\r\n    let removeFromCart = (productId) => {\r\n\r\n        dispatch(removeCartItem(productId))\r\n            .then(response => {\r\n                \r\n                if(response.payload.proudctInfo.length <= 0 ) {\r\n                    setShowTotal(false)\r\n\r\n                }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div  style={{ width: '85%' , margin: '3rem auto'}}>\r\n            <h1>My Cart</h1>\r\n        \r\n        <div>\r\n            <UserCardBlock products={props.user.cartDetail} removeItem={removeFromCart} />\r\n        </div>\r\n        {ShowTotal ? \r\n        <div style={{ marginTop: '3rem'}}>\r\n            <h2> Total Amount : ${Total} </h2>\r\n        </div>\r\n        :\r\n        <Empty description={false} />\r\n\r\n    }\r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage;"]},"metadata":{},"sourceType":"module"}