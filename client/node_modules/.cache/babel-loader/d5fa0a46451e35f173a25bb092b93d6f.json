{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER, ADD_TO_CART, GET_CART_ITEMS, REMOVE_CART_ITEMS } from './types';\nimport { USER_SERVER } from '../components/Config.js';\nimport { IdcardFilled } from '@ant-design/icons';\nexport function registerUser(dataToSubmit) {\n  const request = axios.post(`${USER_SERVER}/register`, dataToSubmit).then(response => response.data);\n  return {\n    type: REGISTER_USER,\n    payload: request\n  };\n}\nexport function loginUser(dataToSubmit) {\n  const request = axios.post(`${USER_SERVER}/login`, dataToSubmit).then(response => response.data);\n  return {\n    type: LOGIN_USER,\n    payload: request\n  };\n}\nexport function auth() {\n  const request = axios.get(`${USER_SERVER}/auth`).then(response => response.data);\n  return {\n    type: AUTH_USER,\n    payload: request\n  };\n}\nexport function logoutUser() {\n  const request = axios.get(`${USER_SERVER}/logout`).then(response => response.data);\n  return {\n    type: LOGOUT_USER,\n    payload: request\n  };\n}\nexport function addToCart(id) {\n  let body = {\n    productId: id\n  };\n  const request = axios.post(`${USER_SERVER}/addToCart`, body).then(response => response.data);\n  return {\n    type: ADD_TO_CART,\n    payload: request\n  };\n}\nexport function getCartItems(cartItems, userCart) {\n  const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`).then(response => {\n    // CartItem들에 해당하는 정보들을  \n    // Product Collection에서 가져온후에 \n    // Quantity 정보를 넣어 준다.\n    userCart.forEach(cartItem => {\n      response.data.forEach((productDetail, index) => {\n        if (cartItem.id === productDetail._id) {\n          response.data[index].quantity = cartItem.quantity;\n        }\n      });\n    });\n    return response.data;\n  });\n  return {\n    type: GET_CART_ITEMS,\n    payload: request\n  };\n}\nexport function removeCartItem(productId) {\n  const request = axios.get(`/api/users/removeFromCart?id=${productId}`).then(res => {\n    res.data.cart.forEach(item => {\n      res.data.productInfo.forEach((product, i) => {\n        if (item.id === product._id) {\n          res.data.productInfo[i].quantity = item.quantity;\n        }\n      });\n    });\n    return res.data;\n  });\n  return {\n    type: REMOVE_CART_ITEM,\n    payload: request\n  };\n}","map":{"version":3,"sources":["C:/Users/82104/Desktop/다시 flower/flower/client/src/_actions/user_actions.js"],"names":["axios","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART","GET_CART_ITEMS","REMOVE_CART_ITEMS","USER_SERVER","IdcardFilled","registerUser","dataToSubmit","request","post","then","response","data","type","payload","loginUser","auth","get","logoutUser","addToCart","id","body","productId","getCartItems","cartItems","userCart","forEach","cartItem","productDetail","index","_id","quantity","removeCartItem","res","cart","item","productInfo","product","i","REMOVE_CART_ITEM"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEMS\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\nimport { IdcardFilled } from '@ant-design/icons';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\nexport function addToCart(id){\n\n    let body =  {\n        productId : id\n    }\n\n    const request = axios.post(`${USER_SERVER}/addToCart`, body)\n    .then(response => response.data);\n\n    return {\n        type: ADD_TO_CART,\n        payload: request\n    }\n}\nexport function getCartItems(cartItems, userCart) {\n\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`)\n        .then(response => {\n            // CartItem들에 해당하는 정보들을  \n            // Product Collection에서 가져온후에 \n            // Quantity 정보를 넣어 준다.\n            userCart.forEach(cartItem => {\n                response.data.forEach((productDetail, index) => {\n                    if (cartItem.id === productDetail._id) {\n                        response.data[index].quantity = cartItem.quantity\n                    }\n                })\n            })\n            return response.data;\n        });\n\n    return {\n        type: GET_CART_ITEMS,\n        payload: request\n    }\n}\n\nexport function removeCartItem(productId) {\n    const request = axios\n      .get(`/api/users/removeFromCart?id=${productId}`)\n      .then((res) => {\n        res.data.cart.forEach((item) => {\n          res.data.productInfo.forEach((product, i) => {\n            if (item.id === product._id) {\n              res.data.productInfo[i].quantity = item.quantity;\n            }\n          });\n        });\n        return res.data;\n      });\n  \n    return {\n      type: REMOVE_CART_ITEM,\n      payload: request,\n    };\n  }\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}